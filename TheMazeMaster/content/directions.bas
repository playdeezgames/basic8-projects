DIRECTION_NORTH=0
DIRECTION_EAST=1
DIRECTION_SOUTH=2
DIRECTION_WEST=3
DIRECTION_FIRST = DIRECTION_NORTH
DIRECTION_LAST = DIRECTION_WEST
DIRECTION_COUNT = 4
DEF OPPOSITE_DIRECTION(DIR)
    IF DIR=DIRECTION_NORTH THEN
        RETURN DIRECTION_SOUTH
    ELSEIF DIR=DIRECTION_EAST THEN
        RETURN DIRECTION_WEST
    ELSEIF DIR=DIRECTION_SOUTH THEN
        RETURN DIRECTION_NORTH
    ELSEIF DIR=DIRECTION_WEST THEN
        RETURN DIRECTION_EAST
    ELSE
        ASSERT(FALSE,"INVALID DIRECTION")
    ENDIF    
ENDDEF
DEF NEXT_DIRECTION(DIR)
    IF DIR=DIRECTION_NORTH THEN
        RETURN DIRECTION_EAST
    ELSEIF DIR=DIRECTION_EAST THEN
        RETURN DIRECTION_SOUTH
    ELSEIF DIR=DIRECTION_SOUTH THEN
        RETURN DIRECTION_WEST
    ELSEIF DIR=DIRECTION_WEST THEN
        RETURN DIRECTION_NORTH
    ELSE
        ASSERT(FALSE,"INVALID DIRECTION")
    ENDIF    
ENDDEF
DEF PREVIOUS_DIRECTION(DIR)
    IF DIR=DIRECTION_NORTH THEN
        RETURN DIRECTION_WEST
    ELSEIF DIR=DIRECTION_EAST THEN
        RETURN DIRECTION_NORTH
    ELSEIF DIR=DIRECTION_SOUTH THEN
        RETURN DIRECTION_EAST
    ELSEIF DIR=DIRECTION_WEST THEN
        RETURN DIRECTION_SOUTH
    ELSE
        ASSERT(FALSE,"INVALID DIRECTION")
    ENDIF    
ENDDEF
DEF STEP_X(DIR,X,Y)
    IF DIR=DIRECTION_NORTH THEN
        RETURN X
    ELSEIF DIR=DIRECTION_EAST THEN
        RETURN X+1
    ELSEIF DIR=DIRECTION_SOUTH THEN
        RETURN X
    ELSEIF DIR=DIRECTION_WEST THEN
        RETURN X-1
    ELSE
        ASSERT(FALSE,"INVALID DIRECTION")
    ENDIF    
ENDDEF
DEF STEP_Y(DIR,X,Y)
    IF DIR=DIRECTION_NORTH THEN
        RETURN Y-1
    ELSEIF DIR=DIRECTION_EAST THEN
        RETURN Y
    ELSEIF DIR=DIRECTION_SOUTH THEN
        RETURN Y+1
    ELSEIF DIR=DIRECTION_WEST THEN
        RETURN Y
    ELSE
        ASSERT(FALSE,"INVALID DIRECTION")
    ENDIF    
ENDDEF