CREATURE_ALIVE=LIST()
CREATURE_MAZE_COLUMN=LIST()
CREATURE_MAZE_ROW=LIST()
CREATURE_ROOM_COLUMN=LIST()
CREATURE_ROOM_ROW=LIST()
CREATURE_TYPE=LIST()
CREATURE_HITPOINTS=LIST()
CREATURE_WOUNDS=LIST()
CREATURE_WEAPONS=DICT()
DEF CLEAR_CREATURES()
    CLEAR(CREATURE_ALIVE)
    CLEAR(CREATURE_MAZE_COLUMN)
    CLEAR(CREATURE_MAZE_ROW)
    CLEAR(CREATURE_ROOM_COLUMN)
    CLEAR(CREATURE_ROOM_ROW)
    CLEAR(CREATURE_TYPE)
    CLEAR(CREATURE_HITPOINTS)
    CLEAR(CREATURE_WOUNDS)
    CLEAR(CREATURE_WEAPONS)
ENDDEF
DEF GET_CREATURE_XP(I)
    CT=CREATURE_TYPE(I)
    IF EXISTS(CREATURETYPE_XP,CT) THEN
        RETURN CREATURETYPE_XP(CT)
    ENDIF
    RETURN 0
ENDDEF
DEF PLACE_CREATURE(I)
    MX=CREATURE_MAZE_COLUMN(I)
    MY=CREATURE_MAZE_ROW(I)
    RM=GET_ROOM_MAP(MX,MY)
    TI=CREATURETYPE_TILE_INDICES(CREATURE_TYPE(I))
    MSET RM,2,CREATURE_ROOM_COLUMN(I),CREATURE_ROOM_ROW(I),TI
ENDDEF
DEF CREATURE_DROP_ITEM(I)
    CT=CREATURE_TYPE(I)
    'TODO: CHANCE OF NOT DROPPING ITEM?
    'TODO: WEIGHTED GENERATOR FOR WHAT ITEM GETS DROPPED?
    IT=CREATURETYPE_ITEMTYPE_DROP(CT)
    MX=CREATURE_MAZE_COLUMN(I)
    MY=CREATURE_MAZE_ROW(I)
    X=CREATURE_ROOM_COLUMN(I)
    Y=CREATURE_ROOM_ROW(I)
    II=CREATE_ROOM_ITEM(IT,MX,MY,X,Y)
    PLACE_ITEM(II)
ENDDEF
DEF REMOVE_CREATURE(I)
    MX=CREATURE_MAZE_COLUMN(I)
    MY=CREATURE_MAZE_ROW(I)
    RM=GET_ROOM_MAP(MX,MY)
    MSET RM,2,CREATURE_ROOM_COLUMN(I),CREATURE_ROOM_ROW(I),TILE_EMPTY
ENDDEF
DEF CREATE_CREATURE(CT,MX,MY,X,Y)
    'TODO: REUSE DEAD CREATURES WHEN POSSIBLE
    I=LEN(CREATURE_ALIVE)
    PUSH(CREATURE_ALIVE,TRUE)
    PUSH(CREATURE_TYPE,CT)
    PUSH(CREATURE_MAZE_COLUMN,MX)
    PUSH(CREATURE_MAZE_ROW,MY)
    PUSH(CREATURE_ROOM_COLUMN,X)
    PUSH(CREATURE_ROOM_ROW,Y)
    PUSH(CREATURE_HITPOINTS,CREATURETYPE_HITPOINTS(CT))
    PUSH(CREATURE_WOUNDS,0)
    WT=CREATURETYPE_DEFAULT_WEAPONTYPES(CT)
    CREATURE_WEAPONS(I)=CREATE_ITEM(WT)
    PLACE_CREATURE(I)
    RETURN I
ENDDEF
DEF GENERATE_CREATURE(CT)
    L=CREATURETYPE_MINIMUM_EXIT_COUNTS(CT)
    H=CREATURETYPE_MAXIMUM_EXIT_COUNTS(CT)
    LX=CREATURETYPE_MINIMUM_X(CT)
    LY=CREATURETYPE_MINIMUM_Y(CT)
    HX=CREATURETYPE_MAXIMUM_X(CT)
    HY=CREATURETYPE_MAXIMUM_Y(CT)
    DO
        MX=RND(0,MAZE_COLUMNS-1)
        MY=RND(0,MAZE_ROWS-1)
        E=GET_MAZE_CELL_EXITS(MX,MY)
        DO
            X=RND(0,ROOM_COLUMNS-1)
            Y=RND(0,ROOM_ROWS-1)
            RM=GET_ROOM_MAP(MX,MY)
            TI=MGET RM,1,X,Y
            CTI=MGET RM,2,X,Y
        UNTIL TI=TILE_FLOOR AND CTI=TILE_EMPTY AND X>=LX AND X<=HX AND Y>=LY AND Y<=HY
    UNTIL E>=L AND E<=H
    RETURN CREATE_CREATURE(CT,MX,MY,X,Y)
ENDDEF
DEF GENERATE_CREATURES()
    CLEAR_CREATURES()
    FOR CTI=0 TO LEN(ALL_CREATURETYPES)-1
        CT=ALL_CREATURETYPES(CTI)
        SC=CREATURETYPE_SPAWN_COUNTS(CT)
        WHILE SC>0
            GENERATE_CREATURE(CT)
            SC=SC-1
        WEND
    NEXT CTI
ENDDEF
DEF CREATURE_ROLL_ATTACK(I)
    IF EXISTS(CREATURE_WEAPONS,I) THEN
        W=CREATURE_WEAPONS(I)
        RETURN ITEM_ROLL_ATTACK(W)
    ENDIF
    RETURN 0
ENDDEF
DEF CREATURE_ROLL_DEFEND(I)
    'ARMOR
    RETURN 0
ENDDEF
DEF GET_CREATURE_NAME(I)
    CT=CREATURE_TYPE(I)
    RETURN CREATURETYPE_NAME(CT)
ENDDEF
DEF GET_CREATURE_HEALTH(I)
    RETURN CREATURE_HITPOINTS(I)-CREATURE_WOUNDS(I)
ENDDEF
DEF FIND_CREATURE(MX,MY,X,Y)
    FOR I=0 TO LEN(CREATURE_ALIVE)-1
        IF CREATURE_ALIVE(I) THEN
            IF MX=CREATURE_MAZE_COLUMN(I) AND MY=CREATURE_MAZE_ROW(I) AND X=CREATURE_ROOM_COLUMN(I) AND Y=CREATURE_ROOM_ROW(I) THEN
                RETURN I
            ENDIF
        ENDIF
    NEXT I
    RETURN -1
ENDDEF
MOVE_SUCCESS="SUCCESS"
MOVE_FIGHT="FIGHT"
MOVE_PICKUP="PICKUP"
MOVE_BLOCKED="BLOCKED"
DEF MOVE_CREATURE(I,D)
    R=MOVE_BLOCKED
    IF CREATURE_ALIVE(I) THEN
        REMOVE_CREATURE(I)
        X=CREATURE_ROOM_COLUMN(I)
        Y=CREATURE_ROOM_ROW(I)
        NX=STEP_X(D,X,Y)
        NY=STEP_Y(D,X,Y)
        MX=CREATURE_MAZE_COLUMN(I)
        MY=CREATURE_MAZE_ROW(I)
        IF NX<0 OR NY<0 OR NX>=ROOM_COLUMNS OR NY>=ROOM_ROWS THEN
            CREATURE_MAZE_COLUMN(I) = STEP_X(D,MX,MY)
            CREATURE_MAZE_ROW(I) = STEP_Y(D,MX,MY)
            IF NX<0 THEN
                CREATURE_ROOM_COLUMN(I)=NX+ROOM_COLUMNS
            ELSEIF NX>=ROOM_COLUMNS THEN
                CREATURE_ROOM_COLUMN(I)=NX-ROOM_COLUMNS
            ELSE
                CREATURE_ROOM_COLUMN(I)=NX
            ENDIF
            IF NY<0 THEN
                CREATURE_ROOM_ROW(I)=NY+ROOM_ROWS
            ELSEIF NY>=ROOM_ROWS THEN
                CREATURE_ROOM_ROW(I)=NY-ROOM_ROWS
            ELSE
                CREATURE_ROOM_ROW(I)=NY
            ENDIF
        ELSE
            TL=GET_ROOM_TILE(MX,MY,NX,NY)
            IF CAN_WALK_ON_TILE(TL) THEN
                TL=GET_ROOM_CREATURE_TILE(MX,MY,NX,NY)
                IF TL=TILE_EMPTY THEN
                    CREATURE_ROOM_COLUMN(I)=NX
                    CREATURE_ROOM_ROW(I)=NY
                    R= MOVE_SUCCESS
                ELSE
                    IF IS_TILE_CREATURE(TL) THEN
                        R= MOVE_FIGHT
                    ELSE
                        R= MOVE_ITEM
                    ENDIF
                ENDIF
            ENDIF
        ENDIF
        PLACE_CREATURE(I)
    ENDIF
    RETURN R
ENDDEF
DEF WOUND_CREATURE(I,D)
    IF CREATURE_ALIVE(I) THEN
        CREATURE_WOUNDS(I)=CREATURE_WOUNDS(I)+D
        IF CREATURE_WOUNDS(I)>=CREATURE_HITPOINTS(I) THEN
            CREATURE_ALIVE(I)=FALSE
            CREATURE_WOUNDS(I)=CREATURE_HITPOINTS(I)
        ENDIF
    ENDIF
ENDDEF
